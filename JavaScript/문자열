문자열 만들기: 문자열은 '따옴표' 혹은 "쌍따옴표"로 시작하고 끝난다
  문자열 이스케이프 문자: 역슬래시(\)를 문자 바로 앞에 작성하여 문자열로 인식하게 할 수 있다.
    ex) 'I\'ve got something to eat for';
    
문자열 연결하기: 더하기(+) 연산자를 이용해 문자열을 연결할 수 있다.
  ex) var one = 'Hello,'
    var two = 'how are you?';
    var greeting = one + two;
    greeting; //-> "Hello, how are you?"
  변수와 문자열을 혼합하여 사용할 수도 있다.
    ex) var response = one + 'I am fine' + two;
      response; //-> "Hello, I am fine — how are you?"
      
해당 변수가 문자열인지 숫자인지 확인하는법: typeof 변수;
  ex) var exString = '19' + '92';
    typeof exString; //-> "string"
  ex) var exNumber = 19 + 92;
    typeof exNumber; //-> "number"
  변수 자체의 값을 바꾸지않고 문자열을 숫자로 바꾸는법: Number(문자열 변수)
    ex) var myString = '123';
      var myNum = Number(myString);
      typeof myNum; //-> "number"로 출력되는 것을 확인할 수 있다.
  반대로 숫자를 문자열로 바꾸는법: 숫자 변수.toString();
    ex) var myNum = 123;
      var myString = myNum.toString();
      typeof myString; //-> "string"으로 출력되는 것을 확인할 수 있다.

문자열의 길이 찾기: 변수명.length;
  ex) var fruitName = 'pineapple';
    fruitName.length; //-> 9가 나오는것을 확인할 수 있다.
  
특정 문자열 찾기: 변수명[숫자]; 대괄호 표기법을 이용하여 문자열 안의 문자를 구할 수 있다. 
  첫 번째 문자 구하기: 변수명[0];
    ex) fruitName[0]; //-> 첫 번째 문자인 a가 나오는 것을 확인할 수 있다.
  마지막 문자 구하기: 변수명[변수명.length-1]; 컴퓨터는 0부터 숫자를 셈으로 문자열의 길이-1 을 해주면 마지막 문자 위치가 된다.
    ex) fruitName[fruitName.length-1]; //-> 마지막 문자인 e가 나오는 것을 확인할 수 있다.

문자열 내부의 하위 문자열 찾기 및 추출: indexOf()를 사용하여 하위 문자열을 찾을 수 있다.
  ex) fruitName.indexOf('apple'); //-> 'apple'의 시작위치인 숫자 4가(5번째 위치) 나오는 것을 확인할 수 있다.
  ex) fruitName.indexOf('banana'); //-> 'banana' 라는 문자열을 발견하지 못하였음으로 -1이라는 값을 반환한다.
  
대/소문자 변경: toUpperCase();, toLowerCase();
  ex) var fruitName = 'I like to eat pineApple';
    fruitName.toUpperCase(); //-> 'I LIKE TO EAT PINEAPPLE'
    fruitName.toLowerCase(); //-> 'i like to eat pineapple'

문자열의 일부를 변경하는법: 변수.replace(바꾸려는 하위문자열,바꾸고 싶은 값);
  ex) var fruitName = 'I like to eat pineApple';
    fruitName.replace('like','hate'); //-> "I hate to eat pineApple"
  
